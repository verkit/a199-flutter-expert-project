// Mocks generated by Mockito 5.0.16 from annotations
// in core/test/presentation/pages/tv/top_rated_tvs_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:bloc/bloc.dart' as _i5;
import 'package:core/domain/usecases/tv/get_top_rated_tvs.dart' as _i2;
import 'package:core/presentation/bloc/tv/top_rated_tvs/top_rated_tvs_cubit.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetTopRatedTvs_0 extends _i1.Fake implements _i2.GetTopRatedTvs {}

class _FakeTopRatedTvsState_1 extends _i1.Fake implements _i3.TopRatedTvsState {
}

/// A class which mocks [TopRatedTvsCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedTvsCubit extends _i1.Mock implements _i3.TopRatedTvsCubit {
  MockTopRatedTvsCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTopRatedTvs get getTopRatedTvs =>
      (super.noSuchMethod(Invocation.getter(#getTopRatedTvs),
          returnValue: _FakeGetTopRatedTvs_0()) as _i2.GetTopRatedTvs);
  @override
  _i3.TopRatedTvsState get state =>
      (super.noSuchMethod(Invocation.getter(#state),
          returnValue: _FakeTopRatedTvsState_1()) as _i3.TopRatedTvsState);
  @override
  _i4.Stream<_i3.TopRatedTvsState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i3.TopRatedTvsState>.empty())
          as _i4.Stream<_i3.TopRatedTvsState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i4.Future<void> fetchTopRatedTvs() =>
      (super.noSuchMethod(Invocation.method(#fetchTopRatedTvs, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  void emit(_i3.TopRatedTvsState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void onChange(_i5.Change<_i3.TopRatedTvsState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  _i4.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}
